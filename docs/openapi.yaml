openapi: 3.0.3
info:
  title: CTMS Wallet Service API
  version: 1.0.0
  description: REST API for wallet, transaction, and budget management
servers:
  - url: http://localhost:3003/api/v1
paths:
  /wallet/{userId}:
    get:
      summary: Get wallet by userId
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseWallet'
        '404':
          description: Not Found
  /wallet:
    post:
      summary: Create wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, initial_balance, currency]
              properties:
                user_id: { type: string }
                initial_balance: { type: number, format: decimal }
                currency: { type: string }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseWallet'
  /wallet/{wallet_id}/status:
    put:
      summary: Update wallet status
      parameters:
        - in: path
          name: wallet_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
                  enum: [ACTIVE, FREEZE, CLOSE]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /wallet/{wallet_id}/transactions:
    get:
      summary: List transactions
      parameters:
        - in: path
          name: wallet_id
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: start_date
          schema:
            type: string
            format: date-time
        - in: query
          name: end_date
          schema:
            type: string
            format: date-time
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseTransactions'
    post:
      summary: Create transaction
      parameters:
        - in: path
          name: wallet_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount, type]
              properties:
                amount: { type: number, format: decimal }
                type: { type: string }
                description: { type: string }
                status: { type: string }
                metadata: { type: object }
                reference_id: { type: string }
                reference_type: { type: string }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseTransaction'
  /budget/{user_id}:
    get:
      summary: Get budgets for a user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseBudgets'
  /budget:
    post:
      summary: Create budget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [wallet_id, total_amount, period_type, start_date, end_date, created_by]
              properties:
                wallet_id: { type: string }
                total_amount: { type: number, format: decimal }
                period_type: { type: string }
                start_date: { type: string, format: date }
                end_date: { type: string, format: date }
                created_by: { type: string }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseBudget'
components:
  schemas:
    ApiErrorEnvelope:
      type: object
      properties:
        success: { type: boolean }
        error:
          type: object
          properties:
            code: { type: string }
            message: { type: string }
            details:
              type: array
              items: { type: string }
        meta:
          type: object
          properties:
            requestId: { type: string }
            timestamp: { type: string, format: date-time }
    SuccessResponse:
      type: object
      properties:
        statusCode: { type: integer }
        data: {}
        message: { type: string }
        success: { type: boolean }
    Wallet:
      type: object
      properties:
        wallet_id: { type: string }
        user_id: { type: string }
        balance: { type: string }
        currency: { type: string }
        status: { type: string }
        created_at: { type: string, format: date-time }
        updated_at: { type: string, format: date-time }
    Transaction:
      type: object
      properties:
        txn_id: { type: string }
        amount: { type: string }
        type: { type: string }
        description: { type: string, nullable: true }
        status: { type: string }
        created_at: { type: string, format: date-time }
    Budget:
      type: object
      properties:
        budget_id: { type: string }
        wallet_id: { type: string }
        total_amount: { type: string }
        used_amount: { type: string }
        period_type: { type: string }
        start_date: { type: string, format: date-time }
        end_date: { type: string, format: date-time }
        status: { type: string }
        created_by: { type: string }
        created_at: { type: string, format: date-time }
        updated_at: { type: string, format: date-time }
    SuccessResponseWallet:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Wallet'
    SuccessResponseTransaction:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Transaction'
    SuccessResponseTransactions:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                transactions:
                  type: array
                  items:
                    $ref: '#/components/schemas/Transaction'
                pagination:
                  type: object
                  properties:
                    page: { type: integer }
                    limit: { type: integer }
                    total: { type: integer }
    SuccessResponseBudget:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Budget'
    SuccessResponseBudgets:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Budget'

